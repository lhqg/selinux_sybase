############################################################################
#
#	Sybase ASE SELinux policymodule
#
#	https://github.com/lhqg/selinux_sybase
#
#
# Copyright (c) 2024, LHQG, H. Quarantel-Colombani <hubert@quarantel.name>
# Author: Hubert Quarantel-Colombani <hubert@quarantel.name>
#
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of version 3 of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
############################################################################

#######################################
## <summary>
##      This interface allows a domain to 
##      use Sybase binaries and libraries as a DB client
## </summary>
## <desc>
##      <p>
##      This interface grants the sybase_client_domain
##      attribute.
##      </p>
## </desc>
## <param name="domain">
##      <summary>
##      The domain to grant connect permission to.
##      </summary>
## </param>

interface(`sybase_client',`
        gen_require(`
                type            $1_t;
                
                attribute       sybase_client_domain;
        ')

        typeattribute   $1_t    sybase_client_domain;
')

#######################################
## <summary>
##      This interface allows a domain to 
##      connect to a Sybase DB/server via the network
## </summary>
## <desc>
##      <p>
##      This interface grants the permission to connect to
##      a Sybase TCP port.
##      </p>
## </desc>
## <param name="domain">
##      <summary>
##      The domain to grant connect permission to.
##      </summary>
## </param>

interface(`sybase_connect',`
        gen_require(`
                type $1_t;
                
                type            sybase_port_t;
        ')

        allow   $1_t  sybase_port_t:tcp_socket    name_connect;
')


#######################################
## <summary>
##      This template declares file transitions for a
##      a specific Sybase ASE server/instance
## </summary>
## <desc>
##      <p>
##      This template declares file transitions for a
##      a specific Sybase ASE server/instance
##      </p>
## </desc>
## <param name="server">
##      <summary>
##      The name of the Sybase ASE server/instance
##      </summary>
## </param>

template(`sybase_server_template',`

        gen_require(`
        	attribute       sybase_domain;
                
                type            sybase_install_t;
                type            sybase_t;

                type            sybase_usr_t;
                type            sybase_bin_t;
                type            sybase_var_t;
                type            sybase_exec_t;
                type            sybase_conf_t;
                type            sybase_dynconf_t;
        ')

        filetrans_add_pattern(sybase_install_t,    sybase_usr_t,     sybase_dynconf_t,     file, "$1.properties" )
        filetrans_add_pattern(sybase_install_t,    sybase_usr_t,     sybase_dynconf_t,     file, "$1.bak" )
        filetrans_add_pattern(sybase_install_t,    sybase_usr_t,     sybase_dynconf_t,     file, "$1.cfg" )
        filetrans_add_pattern(sybase_install_t,    sybase_usr_t,     sybase_dynconf_t,     file, "$1.krg" )

        # These transition will only work when boolean allow_sybase_usr_writes is True
        # but file transition are not allowed in conditional statements...
        type_transition    sybase_t    sybase_usr_t:file    sybase_dynconf_t    "$1.properties";
        type_transition    sybase_t    sybase_usr_t:file    sybase_dynconf_t    "$1.bak";
        type_transition    sybase_t    sybase_usr_t:file    sybase_dynconf_t    "$1.cfg";
        type_transition    sybase_t    sybase_usr_t:file    sybase_dynconf_t    "$1.krg";

        filetrans_add_pattern(sybase_domain,    sybase_var_t,     sybase_dynconf_t,     file, "$1.properties" )
        filetrans_add_pattern(sybase_domain,    sybase_var_t,     sybase_dynconf_t,     file, "$1.bak" )
        filetrans_add_pattern(sybase_domain,    sybase_var_t,     sybase_dynconf_t,     file, "$1.cfg" )
        filetrans_add_pattern(sybase_domain,    sybase_var_t,     sybase_dynconf_t,     file, "$1.krg" )
        
        filetrans_add_pattern(sybase_domain,    sybase_conf_t,    sybase_dynconf_t,     file, "$1.properties" )
        filetrans_add_pattern(sybase_domain,    sybase_conf_t,    sybase_dynconf_t,     file, "$1.bak" )
        filetrans_add_pattern(sybase_domain,    sybase_conf_t,    sybase_dynconf_t,     file, "$1.cfg" )
        filetrans_add_pattern(sybase_domain,    sybase_conf_t,    sybase_dynconf_t,     file, "$1.krg" )
        
        filetrans_add_pattern(sybase_install_t, sybase_usr_t,     sybase_conf_t,        file, "$1_BS.hosts.allow" )
        filetrans_add_pattern(sybase_install_t, sybase_var_t,     sybase_conf_t,        file, "$1_BS.hosts.allow" )
        
        filetrans_add_pattern(sybase_install_t, sybase_usr_t,     sybase_conf_t,        file, "SYBASE-$1.env" )
        filetrans_add_pattern(sybase_install_t, sybase_var_t,     sybase_conf_t,        file, "SYBASE-$1.env" )
        
        filetrans_add_pattern(sybase_install_t, sybase_bin_t,     sybase_exec_t,        file, "RUN_$1" )
        filetrans_add_pattern(sybase_install_t, sybase_bin_t,     sybase_exec_t,        file, "RUN_$1_BS" )
')
